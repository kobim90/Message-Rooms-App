{"version":3,"sources":["actions/type.js","services/auth-header.js","services/auth.services.js","actions/auth.js","components/shared/loginLogout.js","components/shared/wrapper.js","helper/validateInputs.js","components/login.js","reducers/auth.js","reducers/message.js","reducers/socket.js","reducers/index.js","store.js","components/register.js","actions/socket.js","components/chatroom.js","components/home.js","components/protectedRoute.js","helper/history.js","App.js","actions/message.js","reportWebVitals.js","index.js"],"names":["REGISTER_SUCCESS","REGISTER_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","SET_MESSAGE","CLEAR_MESSAGE","SET_SOCKET","authHeader","user","JSON","parse","localStorage","getItem","accessToken","URL","register","username","email","password","a","console","log","axios","post","response","data","login","setItem","stringify","getRooms","get","headers","AuthServices","logout","removeItem","dispatch","AuthService","type","payload","message","Promise","resolve","toString","reject","LoginLogoutBtn","className","to","Wrapper","props","children","required","value","validEmail","isEmail","vusername","length","vpassword","Login","form","useRef","checkBtn","useState","setUsername","setPassword","loading","setLoading","isLoggedIn","useSelector","state","auth","useDispatch","handleLogin","e","preventDefault","current","validateAll","context","_errors","onSubmit","ref","placeholder","name","onChange","target","validations","role","style","display","initialState","authReducer","action","cases","undefined","messageReducer","socketReducer","socket","combineReducers","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","Register","setEmail","successful","setSuccessful","handleRegister","setSocket","io","token","Headers","Chatroom","chatroomId","chatroomName","roomLeaveHandler","currentUser","messages","setMessages","text","setText","messagesEndRef","sendData","trim","id","uuidv4","userId","delivered","seen","emit","room","prev","useEffect","on","tmp","pop","scrollIntoView","behavior","marginLeft","toUpperCase","slice","map","i","icon","faCheck","class","onKeyPress","key","onClick","Home","rooms","setRooms","currentRoom","setCurrentRoom","icons","news","faNewspaper","sports","faFutbol","gaming","faGamepad","medicine","faStethoscope","coding","faLaptopCode","res","faUserCircle","size","disconnect","faSignOutAlt","index","description","ProtectedRoute","Component","component","rest","render","history","createBrowserHistory","App","listen","location","exact","path","AppWrapper","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.83aba8bf.chunk.js","sourcesContent":["export const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\r\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const LOGOUT = \"LOGOUT\";\r\n\r\nexport const SET_MESSAGE = \"SET_MESSAGE\";\r\nexport const CLEAR_MESSAGE = \"CLEAR_MESSAGE\";\r\nexport const SET_SOCKET = \"SET_SOCKET\";\r\n","export default function authHeader() {\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n  \r\n    if (user && user.accessToken) {\r\n      return { 'x-access-token': user.accessToken };\r\n    } else {\r\n      return {};\r\n    }\r\n  }\r\n  ","import axios from \"axios\";\r\nimport authHeader from \"./auth-header\";\r\n\r\nconst URL = \"https://rooms-message-app.herokuapp.com/auth/\";\r\n\r\nconst register = async (username, email, password) => {\r\n    console.log(\"services\");\r\n    const response = await axios.post(URL + \"signup\", {\r\n        username,\r\n        email,\r\n        password\r\n    });\r\n    return response.data;\r\n};\r\n\r\nconst login = async (username, password) => {\r\n    const response = await axios.post(URL + \"signin\", {\r\n        username,\r\n        password\r\n    });\r\n\r\n    if (response.data.accessToken){\r\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n    }\r\n    return response.data;\r\n};\r\n\r\nconst logout = () => {\r\n    localStorage.removeItem(\"user\");\r\n}\r\n\r\nconst getRooms = async () => {\r\n    const response = await axios.get(URL + \"rooms\", {headers: authHeader()});\r\n    return response.data;\r\n};\r\n\r\nconst AuthServices = {\r\n    register,\r\n    login,\r\n    logout,\r\n    getRooms\r\n}\r\nexport default AuthServices;","import {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  SET_MESSAGE,\r\n} from \"./type\";\r\n\r\nimport AuthService from \"../services/auth.services\";\r\n\r\nconst register = (username, email, password) => async (dispatch) => {\r\n  try {\r\n    const data = await AuthService.register(username, email, password);\r\n    dispatch({\r\n      type: REGISTER_SUCCESS,\r\n    });\r\n    dispatch({\r\n      type: SET_MESSAGE,\r\n      payload: data.message,\r\n    });\r\n    return Promise.resolve();\r\n  } catch (error) {    \r\n    const message =\r\n      (error.response && error.response.data && error.response.data.message) ||\r\n      error.message ||\r\n      error.toString();\r\n    dispatch({\r\n      type: REGISTER_FAIL,\r\n    });\r\n    dispatch({\r\n      type: SET_MESSAGE,\r\n      payload: message,\r\n    });\r\n    return Promise.reject();\r\n  }\r\n};\r\n\r\nconst login = (username, password) => async (dispatch) => {\r\n  try {\r\n    const data = await AuthService.login(username, password);\r\n\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: { user: data },\r\n    });\r\n\r\n    return Promise.resolve();\r\n  } catch (error) {\r\n    const message =\r\n      (error.response && error.response.data && error.response.data.message) ||\r\n      error.message ||\r\n      error.toString();\r\n    dispatch({\r\n      type: LOGIN_FAIL,\r\n    });\r\n    dispatch({\r\n      type: SET_MESSAGE,\r\n      payload: message,\r\n    });\r\n    return Promise.reject();\r\n  }\r\n};\r\n\r\nconst logout = () => (dispatch) => {\r\n  AuthService.logout();\r\n\r\n  dispatch({\r\n    type: LOGOUT,\r\n  });\r\n};\r\n\r\nexport { register, login, logout };\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport \"./loginLogout.css\"\r\n\r\nconst LoginLogoutBtn = () => {\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-6 btn-nav-l\">\r\n        <NavLink to=\"/login\">\r\n          <div className=\"d-grid gap-2\">\r\n            <button className=\"btn btn-primary btn-nav no-radius\" type=\"button\">\r\n              <strong>LOGIN</strong>\r\n            </button>\r\n          </div>\r\n        </NavLink>\r\n      </div>\r\n      <div className=\"col btn-nav-r\">\r\n        <NavLink to=\"/register\">\r\n          <div className=\"d-grid gap-2\">\r\n            <button className=\"btn btn-primary btn-nav no-radius\" type=\"button\">\r\n            <strong>REGISTER</strong>\r\n            </button>\r\n          </div>\r\n        </NavLink>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginLogoutBtn;\r\n","import React from \"react\";\r\nimport \"./wrapper.css\"\r\n\r\nconst Wrapper = (props) => {\r\n  return (\r\n    <div className=\"wrapper-main container\">\r\n      <div className=\"row justify-content-center align-items-center mt-5\">\r\n        <div className=\"col-sm-10 col-lg-6 wrapper\">{props.children}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Wrapper;\r\n","import { isEmail } from \"validator\";\r\n\r\nconst required = (value) => {\r\n  if (!value) {\r\n    return <small className=\"text-danger\">This field is required!</small>;\r\n  }\r\n};\r\n\r\nconst validEmail = (value) => {\r\n  if (!isEmail(value)) {\r\n    return <small className=\"text-danger\">This is not a valid email.</small>;\r\n  }\r\n};\r\n\r\nconst vusername = (value) => {\r\n  if (value.length < 3 || value.length > 20) {\r\n    return (\r\n      <small className=\"text-danger\">\r\n        The username must be between 3 and 20 characters.\r\n      </small>\r\n    );\r\n  }\r\n};\r\n\r\nconst vpassword = (value) => {\r\n  if (value.length < 6 || value.length > 40) {\r\n    return (\r\n      <small className=\"text-danger\">\r\n        The password must be between 6 and 40 characters.\r\n      </small>\r\n    );\r\n  }\r\n};\r\n\r\nexport { required, validEmail, vusername, vpassword };\r\n","import React, { useState, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\n\r\nimport { login } from \"../actions/auth\";\r\nimport LoginLogoutBtn from \"./shared/loginLogout\";\r\nimport Wrapper from \"./shared/wrapper\";\r\nimport { required } from \"../helper/validateInputs\";\r\n\r\nimport \"./loginRegister.css\"\r\n\r\nconst Login = (props) => {\r\n  const form = useRef();\r\n  const checkBtn = useRef();\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const { isLoggedIn } = useSelector((state) => state.auth);\r\n  const { message } = useSelector((state) => state.message);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onChangeUsername = (e) => {\r\n    const username = e.target.value;\r\n    setUsername(username);\r\n  };\r\n\r\n  const onChangePassword = (e) => {\r\n    const password = e.target.value;\r\n    setPassword(password);\r\n  };\r\n\r\n  const handleLogin = async (e) => {\r\n    try {\r\n      e.preventDefault();\r\n      setLoading(true);\r\n      form.current.validateAll();\r\n      if (checkBtn.current.context._errors.length === 0) {\r\n        await dispatch(login(username, password));\r\n      } else {\r\n        setLoading(false);\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n    }\r\n  }; \r\n\r\n  if (isLoggedIn) {\r\n    return <Redirect to=\"/home\" />;\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <LoginLogoutBtn />\r\n      <div>\r\n        <Form onSubmit={handleLogin} ref={form}>\r\n          <div className=\"form-group\">\r\n            <Input\r\n              type=\"text\"\r\n              placeholder=\"Username\"\r\n              className=\"form-control\"\r\n              name=\"username\"\r\n              value={username}\r\n              onChange={onChangeUsername}\r\n              validations={[required]}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <Input\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              className=\"form-control\"\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={onChangePassword}\r\n              validations={[required]}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"d-grid gap-2\">\r\n            <button className=\"btn btn-primary btn-block mt-2\">\r\n              <span>Login</span>\r\n            </button>\r\n            {loading && (\r\n              <div className=\"row justify-content-center\">\r\n                <div className=\"spinner-border text-primary\" role=\"status\">\r\n                  <span className=\"visually-hidden\">Loading...</span>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {message && (\r\n            <div className=\"form-group\">\r\n              <div className=\"alert alert-danger\" role=\"alert\">\r\n                {message}\r\n              </div>\r\n            </div>\r\n          )}\r\n          <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\r\n        </Form>\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT,\r\n  } from \"../actions/type\";\r\n\r\nconst user = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\nconst initialState = user\r\n  ? { isLoggedIn: true, user }\r\n  : { isLoggedIn: false, user: null };\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    const {type, payload} = action;\r\n    const cases = {\r\n        [REGISTER_SUCCESS]: {...state, isLoggedIn: false},\r\n        [REGISTER_FAIL]: {...state, isLoggedIn: false},\r\n        [LOGIN_SUCCESS]: {...state, isLoggedIn: true, user: payload ? payload.user : undefined},\r\n        [LOGIN_FAIL]: {...state, isLoggedIn: false, user: null},\r\n        [LOGOUT]: {...state, isLoggedIn: false, user: null},\r\n    }\r\n\r\n    return cases[type] ? cases[type] : state;\r\n}\r\n\r\nexport default authReducer;","import { SET_MESSAGE, CLEAR_MESSAGE } from \"../actions/type\";\r\n\r\nconst initialState = {};\r\n\r\nconst messageReducer = (state = initialState, action) => {\r\n    const {type, payload} = action;\r\n    \r\n    const cases = {\r\n        [SET_MESSAGE]: {message: payload},\r\n        [CLEAR_MESSAGE]: {message: \"\"}\r\n    };\r\n\r\n    return cases[type] ? cases[type] : state\r\n};\r\n\r\nexport default messageReducer;","import { SET_SOCKET } from \"../actions/type\";\r\n\r\nconst initialState = {};\r\n\r\nconst socketReducer = (state = initialState, action) => {\r\n    const {type, payload} = action;\r\n    const cases = {\r\n        [SET_SOCKET]: {...state, socket: payload ? payload.socket : null},\r\n    }\r\n\r\n    return cases[type] ? cases[type] : state;\r\n}\r\n\r\nexport default socketReducer;","import {combineReducers} from \"redux\";\r\nimport auth from \"./auth\";\r\nimport message from \"./message\";\r\nimport socket from \"./socket\";\r\n\r\nexport default combineReducers({\r\n    auth,\r\n    message,\r\n    socket\r\n});","import { createStore, applyMiddleware } from \"redux\";\r\nimport rootReducer from \"./reducers\"\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;","import React, { useState, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\n\r\nimport { register } from \"../actions/auth\";\r\nimport LoginLogoutBtn from \"./shared/loginLogout\";\r\nimport Wrapper from \"./shared/wrapper\"\r\nimport {required, validEmail, vusername, vpassword} from \"../helper/validateInputs\";\r\n\r\nimport \"./loginRegister.css\"\r\n\r\n\r\nconst Register = () => {\r\n  const form = useRef();\r\n  const checkBtn = useRef();\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [successful, setSuccessful] = useState(false);\r\n\r\n  const { message } = useSelector((state) => state.message);\r\n  const dispatch = useDispatch();\r\n\r\n  const onChangeUsername = (e) => {\r\n    const username = e.target.value;\r\n    setUsername(username);\r\n  };\r\n\r\n  const onChangeEmail = (e) => {\r\n    const email = e.target.value;\r\n    setEmail(email);\r\n  };\r\n\r\n  const onChangePassword = (e) => {\r\n    const password = e.target.value;\r\n    setPassword(password);\r\n  };\r\n\r\n  const handleRegister = async (e) => {\r\n    try {\r\n      e.preventDefault();\r\n      setSuccessful(false);\r\n      form.current.validateAll();\r\n      if (checkBtn.current.context._errors.length === 0){\r\n        await dispatch(register(username, email, password))\r\n        setSuccessful(true);\r\n      }\r\n    }\r\n    catch(error){\r\n      setSuccessful(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <LoginLogoutBtn/>\r\n        <Form onSubmit={handleRegister} ref={form}>\r\n          {!successful && (\r\n            <div>\r\n              <div className=\"form-group\">\r\n                <Input\r\n                  type=\"text\"\r\n                  placeholder=\"Username\"\r\n                  className=\"form-control\"\r\n                  name=\"username\"\r\n                  value={username}\r\n                  onChange={onChangeUsername}\r\n                  validations={[required, vusername]}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <Input\r\n                  type=\"text\"\r\n                  placeholder=\"Email\"\r\n                  className=\"form-control\"\r\n                  name=\"email\"\r\n                  value={email}\r\n                  onChange={onChangeEmail}\r\n                  validations={[required, validEmail]}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <Input\r\n                  type=\"password\"\r\n                  placeholder=\"Password\"\r\n                  className=\"form-control\"\r\n                  name=\"password\"\r\n                  value={password}\r\n                  onChange={onChangePassword}\r\n                  validations={[required, vpassword]}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"d-grid gap-2\">\r\n                <button className=\"btn btn-primary mt-2\">Sign Up</button>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {message && (\r\n            <div className=\"form-group\">\r\n              <div\r\n                className={\r\n                  successful ? \"alert alert-success\" : \"alert alert-danger\"\r\n                }\r\n                role=\"alert\"\r\n              >\r\n                {message}\r\n              </div>\r\n            </div>\r\n          )}\r\n          <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\r\n        </Form>\r\n        </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import { SET_SOCKET } from \"./type\";\r\n\r\nimport { io } from \"socket.io-client\";\r\n\r\nconst setSocket = () => (dispatch) => {\r\n  const socket = io(\"https://rooms-message-app.herokuapp.com/\", {\r\n    auth: {\r\n      token: JSON.parse(localStorage.getItem(\"user\")).accessToken,\r\n    },\r\n    Headers: \"Access-Control-Allow-Origin\",\r\n  });\r\n\r\n  dispatch({\r\n    type: SET_SOCKET,\r\n    payload: { socket: socket },\r\n  });\r\n};\r\n\r\nexport default setSocket;","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCheck } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport \"./chatroom.css\";\r\n\r\nconst Chatroom = ({ chatroomId, chatroomName, roomLeaveHandler }) => {\r\n  const { socket } = useSelector((state) => state.socket);\r\n  const { user: currentUser } = useSelector((state) => state.auth);\r\n  const [messages, setMessages] = useState([]);\r\n  const [text, setText] = useState(\"\");\r\n\r\n  const messagesEndRef = useRef(null);\r\n\r\n  const sendData = () => {\r\n    if (text.trim() !== \"\") {\r\n      const message = {\r\n        id: uuidv4(),\r\n        userId: currentUser.id,\r\n        username: currentUser.username,\r\n        text,\r\n        delivered: false,\r\n        seen: false,\r\n      };\r\n      socket.emit(\"chat\", { ...message, room: chatroomId });\r\n      setText(\"\");\r\n      setMessages((prev) => [...prev, message]);\r\n    }\r\n  };\r\n\r\n  const leaveRoomHandler = () => {\r\n    socket.emit(\"leaveRoom\", { chatroomId, currentUser });\r\n    roomLeaveHandler();\r\n  };\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  useEffect(() => {\r\n    // socket.emit(\"joinRoom\", {\r\n    //   chatroomId,\r\n    //   currentUser,\r\n    // });\r\n\r\n    socket.on(\"message\", function (data) {\r\n      setMessages((prev) => [...prev, data]);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"message1\", function (data) {\r\n      setMessages((prev) => {\r\n        let tmp = [...prev];\r\n        console.log(prev[prev.length - 1].delivered);\r\n        if (prev[prev.length - 1].id === data.id && prev[prev.length - 1].delivered !== data.delivered) {\r\n          tmp.pop();\r\n        }\r\n        return [...tmp, data];\r\n      });\r\n    });\r\n  }, [socket]);\r\n\r\n  useEffect(scrollToBottom, [messages]);\r\n\r\n  useEffect( () =>{\r\n    setMessages([])\r\n  }, [chatroomId])\r\n\r\n  return (\r\n    <>\r\n      <div className=\"chat container-fluid\">\r\n        <div>\r\n          <div className=\"row room-name\">\r\n            <h2>\r\n              <span style={{marginLeft: \"1rem\"}}>{`${chatroomName[0].toUpperCase()}${chatroomName.slice(1)}`}:</span>\r\n            </h2>\r\n          </div>\r\n          \r\n        </div>\r\n        <div className=\"chat-message\">\r\n            {messages.map((i) => {\r\n              if (i.username === currentUser.username) {\r\n                return (\r\n                  <div className=\"row\">\r\n                    <div className=\"message col-sm-auto\">\r\n                      <p>\r\n                        {i.text}\r\n                        <span>\r\n                          {i.delivered ? (\r\n                            <>\r\n                              <FontAwesomeIcon icon={faCheck} />\r\n                              <FontAwesomeIcon icon={faCheck} />\r\n                            </>\r\n                          ) : (\r\n                            <FontAwesomeIcon icon={faCheck} />\r\n                          )}\r\n                        </span>\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              } else {\r\n                return (\r\n                  <div className=\"row\">\r\n                    <div className=\"col\"></div>\r\n                    <div className=\"message mess-right col-sm-auto\">\r\n                      <span>{i.username}</span>\r\n                      <p>\r\n                        {i.text}\r\n                        <span>\r\n                          {i.delivered ? (\r\n                            <>\r\n                              <FontAwesomeIcon icon={faCheck} />\r\n                              <FontAwesomeIcon icon={faCheck} />\r\n                            </>\r\n                          ) : (\r\n                            <FontAwesomeIcon icon={faCheck} />\r\n                          )}\r\n                        </span>{\" \"}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              }\r\n            })}\r\n            <div ref={messagesEndRef} />\r\n          </div>\r\n        <div class=\"input-group send-message\">\r\n          <input\r\n            type=\"text\"\r\n            value={text}\r\n            onChange={(e) => setText(e.target.value)}\r\n            onKeyPress={(e) => {\r\n              if (e.key === \"Enter\") {\r\n                sendData();\r\n              }\r\n            }}\r\n            class=\"form-control\"\r\n            placeholder=\"Message\"\r\n          />\r\n          <button\r\n            class=\"btn btn-success btn-chat\"\r\n            type=\"button\"\r\n            onClick={sendData}\r\n          >\r\n            Send\r\n          </button>\r\n          <button\r\n            class=\"btn btn-danger btn-chat\"\r\n            onClick={leaveRoomHandler}\r\n            type=\"button\"\r\n          >\r\n            Leave Room\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Chatroom;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport AuthServices from \"../services/auth.services\";\r\nimport setSocket from \"../actions/socket\";\r\nimport { logout } from \"../actions/auth\";\r\nimport Chatroom from \"./chatroom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faNewspaper,\r\n  faFutbol,\r\n  faGamepad,\r\n  faStethoscope,\r\n  faLaptopCode,\r\n  faUserCircle,\r\n  faSignOutAlt,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport \"./home.css\";\r\n\r\nconst Home = () => {\r\n  const { user: currentUser } = useSelector((state) => state.auth);\r\n  const { socket } = useSelector((state) => state.socket);\r\n  const [rooms, setRooms] = useState([]);\r\n  const [currentRoom, setCurrentRoom] = useState({});\r\n  const dispatch = useDispatch();\r\n  const icons = {\r\n    news: faNewspaper,\r\n    sports: faFutbol,\r\n    gaming: faGamepad,\r\n    medicine: faStethoscope,\r\n    coding: faLaptopCode,\r\n  };\r\n\r\n  const updateCurrentRoom = (id, name) => {\r\n    if (currentRoom.id) {\r\n      socket.emit(\"leaveRoom\", { chatroomId: currentRoom.id });\r\n    }\r\n    if (currentRoom.id !== id) {\r\n      socket.emit(\"joinRoom\", {\r\n        chatroomId: id,\r\n        currentUser,\r\n      });\r\n      setCurrentRoom({ id, name });\r\n    }\r\n  };\r\n\r\n  const roomLeaveHandler = () => {\r\n    setCurrentRoom({});\r\n  };\r\n\r\n  const getRooms = async () => {\r\n    try {\r\n      const res = await AuthServices.getRooms();\r\n      setRooms((prev) => {\r\n        return res;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const logOut = () => {\r\n    socket.disconnect();\r\n    dispatch(logout());\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(setSocket());\r\n    getRooms();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"test row main justify-content-center align-items-center\">\r\n        <div className=\"row main-wrapper\">\r\n          <div className=\"col-sm-12 col-md-auto\">\r\n            <div className=\"user-row\">\r\n              <div className=\"avatar\">\r\n                <FontAwesomeIcon icon={faUserCircle} size=\"3x\" />\r\n                <h3>\r\n                  <strong>{currentUser.username.toUpperCase()}</strong>\r\n                </h3>\r\n              </div>\r\n              <button onClick={logOut}>\r\n                <FontAwesomeIcon icon={faSignOutAlt} size=\"2x\" />\r\n              </button>\r\n            </div>\r\n            <ul class=\"list-group list-group-flush\">\r\n              {rooms.map((room, index) => (\r\n                <button className=\"room-button\" onClick={(e) => updateCurrentRoom(room.id, room.name)}>\r\n                  <li class=\"list-group-item rooms\" key={index}>\r\n                    <p className=\"room-icon\">\r\n                      <FontAwesomeIcon icon={icons[room.name]} size=\"2x\" />\r\n                    </p>\r\n                    <div>\r\n                      <strong>{`${room.name[0].toUpperCase()}${room.name.slice(\r\n                        1\r\n                      )}`}</strong>\r\n                      <p className=\"room-description\">{room.description}</p>\r\n                    </div>\r\n                  </li>\r\n                </button>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n          <div className=\"col equal\">\r\n            {currentRoom.name && (\r\n              <Chatroom\r\n                chatroomId={currentRoom.id}\r\n                chatroomName={currentRoom.name}\r\n                roomLeaveHandler={roomLeaveHandler}\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n\r\n","import { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst ProtectedRoute = ({ component: Component, ...rest }) => {\r\n  const { user: currentUser } = useSelector((state) => state.auth);\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={() => (currentUser ? <Component /> : <Redirect to=\"/login\" />)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import { createBrowserHistory } from \"history\";\r\n\r\nexport const history = createBrowserHistory();\r\n","import Login from \"./components/login\";\r\nimport React, { useEffect } from \"react\";\r\nimport { Provider, useDispatch} from \"react-redux\";\r\nimport { Router, Switch, Route} from \"react-router-dom\";\r\nimport store from \"./store\";\r\nimport Register from \"./components/register\";\r\nimport Home from \"./components/home\";\r\nimport ProtectedRoute from \"./components/protectedRoute\";\r\nimport { clearMessage } from \"./actions/message\";\r\nimport Chatroom from \"./components/chatroom\";\r\n\r\nimport { history } from \"./helper/history\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nconst AppWrapper = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  );\r\n};\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    history.listen((location) => {\r\n      dispatch(clearMessage()); // clear message when changing location\r\n    });\r\n  }, [dispatch]);\r\n\r\n\r\n  return (\r\n    <Router history={history}>\r\n      <Switch>\r\n        <Route exact path={[\"/\", \"/login\"]} component={Login} />\r\n        <Route exact path=\"/register\" component={Register} />\r\n        <ProtectedRoute path=\"/home\" component={Home} />\r\n        <ProtectedRoute path=\"/chatroom/:chatroomName/:chatroomId\" component={Chatroom} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default AppWrapper;\r\n","import { SET_MESSAGE, CLEAR_MESSAGE } from \"./type\";\r\n\r\nconst setMessage = (message) => ({\r\n  type: SET_MESSAGE,\r\n  payload: message,\r\n});\r\n\r\nconst clearMessage = () => ({\r\n    type: CLEAR_MESSAGE\r\n});\r\n\r\nexport {\r\n    setMessage,\r\n    clearMessage\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}